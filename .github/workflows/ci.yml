name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract ngrok
      run: Expand-Archive ngrok.zip
    - name: Auth with ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable Remote Desktop (RDP)
      run: |
        # Enable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        # Allow Remote Desktop through the firewall
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        # Require User Authentication
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    - name: Disable Password Complexity Policy
      run: |
        # Disable the password complexity policy
        secedit /configure /cfg C:\Windows\security\database\secpol.cfg
        # Set password length requirements to a minimal value
        secedit /configure /cfg C:\Windows\security\database\secpol.cfg
    - name: Create user faiz if not exists
      run: |
        if (-not (Get-LocalUser -Name "faiz" -ErrorAction SilentlyContinue)) {
          New-LocalUser -Name "faiz" -Password (ConvertTo-SecureString -AsPlainText "2007" -Force) -FullName "faiz" -Description "Local User for Remote Desktop"
          Add-LocalGroupMember -Group "Administrators" -Member "faiz"
        }
    - name: Set password for user faiz
      run: Set-LocalUser -Name "faiz" -Password (ConvertTo-SecureString -AsPlainText "2007" -Force)
    - name: Create ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
