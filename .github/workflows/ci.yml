name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Auth ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Terminal Services (TS)
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

    - name: Allow RDP through Windows Firewall
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Set RDP user authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set local user password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Start ngrok tunnel
      id: ngrok
      run: |
        $process = Start-Process .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow -PassThru
        # Loop to check if ngrok has started and has a valid public URL
        $ngrok_url = ""
        $maxRetries = 10
        $retries = 0
        while ($ngrok_url -eq "" -and $retries -lt $maxRetries) {
          Write-Host "Checking ngrok status... Retry $($retries+1)"
          Start-Sleep -Seconds 5
          $ngrok_url = curl --silent --max-time 10 http://localhost:4040/api/tunnels | ConvertFrom-Json | Select-Object -ExpandProperty tunnels | Select-Object -First 1 | Select-Object -ExpandProperty public_url
          $retries++
        }
        
        if ($ngrok_url -eq "") {
          Write-Host "Failed to start ngrok tunnel."
          exit 1
        }
        
        Write-Host "Ngrok URL: $ngrok_url"
        echo "::set-output name=ngrok_url::$ngrok_url"

    - name: Display ngrok URL
      run: |
        echo "Ngrok tunnel is available at: ${{ steps.ngrok.outputs.ngrok_url }}"
